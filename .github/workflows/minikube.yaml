name: Minikube Tests
on:
  pull_request:
    branches: [ main ]
jobs:
  wait-for-images:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Images
        run: |
          while true
          do
            if ! docker pull quay.io/redhat-appstudio/pull-request-builds:jvmbuildrequestp-${{ github.event.pull_request.head.sha }} ; then
              echo "Failed to pull image 1"
              sleep 10
              continue
            fi
            if ! docker pull quay.io/redhat-appstudio/pull-request-builds:jvmcache-${{ github.event.pull_request.head.sha }} ; then
              echo "Failed to pull image 2"
              sleep 10
              continue
            fi
            if ! docker pull quay.io/redhat-appstudio/pull-request-builds:jvmcontroller-${{ github.event.pull_request.head.sha }} ; then
              echo "Failed to pull image 3"
              sleep 10
              continue
            fi
            exit 0
          done
  run-gav-based-tests:
    strategy:
      fail-fast: false
      matrix:
        testsets:
          - "test-repos"
          - "build-systems"
          - "commons"
    needs: [wait-for-images]
    runs-on: ubuntu-latest
    name: Minikube GAV Matrix
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          android: true
          dotnet: true
          haskell: true
          docker-images: false
          large-packages: false
          swap-storage: false
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup Registry
        run: |
          export DEV_IP=172.16.1.1
          sudo ifconfig lo:0 $DEV_IP
          docker run -d -p 5000:5000 --restart=always  registry:2
          sudo echo '{ "insecure-registries": ["172.16.1.1:5000"] }' | sudo tee  /etc/docker/daemon.json
      - name: Start minikube
        uses: medyagh/setup-minikube@606b71970c783154fe49b711486c717f5780f485 # v0.0.15
        with:
          cpus: max
          memory: max
          insecure-registry: '172.16.1.1:5000'
      - name: Run Tests
        run: |
          export SHELL=/bin/bash
          export QUAY_USERNAME=minikube
          export DEV_IP=172.16.1.1

          eval $(minikube -p minikube docker-env)

          docker pull quay.io/redhat-appstudio/pull-request-builds:jvmbuildrequestp-${{ github.event.pull_request.head.sha }}
          docker pull quay.io/redhat-appstudio/pull-request-builds:jvmcache-${{ github.event.pull_request.head.sha }}
          docker pull quay.io/redhat-appstudio/pull-request-builds:jvmcontroller-${{ github.event.pull_request.head.sha }}
          docker tag quay.io/redhat-appstudio/pull-request-builds:jvmbuildrequestp-${{ github.event.pull_request.head.sha }} quay.io/minikube/hacbs-jvm-build-request-processor:dev
          docker tag quay.io/redhat-appstudio/pull-request-builds:jvmcache-${{ github.event.pull_request.head.sha }} quay.io/minikube/hacbs-jvm-cache:dev
          docker tag quay.io/redhat-appstudio/pull-request-builds:jvmcontroller-${{ github.event.pull_request.head.sha }} quay.io/minikube/hacbs-jvm-controller:dev

          export TESTSET=${{ matrix.testsets }}

          ./deploy/minikube-ci.sh
          make minikube-test
      - name: Archive Report
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        if: always()
        with:
          name: matrix-report-${{ matrix.testsets }}
          path: /tmp/jvm-build-service-report
