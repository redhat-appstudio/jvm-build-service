apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: gradle
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/displayName: Gradle
    tekton.dev/categories: Build Tools
    tekton.dev/tags: build-tool
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le"
spec:
  description: >-
    This Task can be used to run a Gradle build.
  workspaces:
    - name: source
      description: The workspace consisting of the gradle project.
    - name: maven-settings
      description: >-
        The workspace consisting of the custom gradle settings
        provided by the user.
  results:
    - name: contaminants
      description: Any community GAVs that have ended up in the final output.
    - name: dependencies
      description: The total number of dependencies in the output
    - name: untrusted-dependencies
      description: The total number of dependencies that came from an untrusted source, such as Maven central
  params:
    - name: JAVA_VERSION
      description: Java version.
      type: string
      default: ""
    - name: TOOL_VERSION
      description: Gradle version.
      type: string
      default: "7.5"
    - name: GRADLE_MANIPULATOR_ARGS
      description: Gradle manipulator arguments.
      type: string
      default: "-DdependencySource=NONE -DignoreUnresolvableDependencies=true -DpluginRemoval=ALL -DversionModification=false"
    - name: IMAGE
      description: Gradle base image.
      type: string
      default: quay.io/dwalluck/gradle@sha256:9e970da338047141cbb01ae22dee989d22f11f5ab182c1dddfc4a3fc2e5d3e85
    - name: GOALS
      description: 'The gradle tasks to run (default: build publish)'
      type: array
      default:
        - build
        - publish
    - name: MAVEN_MIRROR_URL
      description: The Maven repository mirror url
      type: string
      default: "http://jvm-build-workspace-artifact-cache.$(context.taskRun.namespace).svc.cluster.local/v1/cache/default/0/"
    - name: SERVER_USER
      description: The username for the server
      type: string
      default: ""
    - name: SERVER_PASSWORD
      description: The password for the server
      type: string
      default: ""
    - name: PROXY_USER
      description: The username for the proxy server
      type: string
      default: ""
    - name: PROXY_PASSWORD
      description: The password for the proxy server
      type: string
      default: ""
    - name: PROXY_PORT
      description: Port number for the proxy server
      type: string
      default: ""
    - name: PROXY_HOST
      description: Proxy server Host
      type: string
      default: ""
    - name: PROXY_NON_PROXY_HOSTS
      description: Non proxy server host
      type: string
      default: ""
    - name: PROXY_PROTOCOL
      description: Protocol for the proxy ie http or https
      type: string
      default: "http"
    - name: CONTEXT_DIR
      description: The directory containing build.gradle
      type: string
      default: "."
    - name: ENFORCE_VERSION
      type: string
      description: >-
        Some builds are incorrectly tagged with a snapshot version, rather
        than the release version. If this is set then the version will be
        updated to the release version before the build.
      default: ""
    - name: IGNORED_ARTIFACTS
      type: string
      description: >-
        Comma-separated list of artifact names that should not be deployed or checked for contaminants.
      default: ""
    - name: DEPENDENCY_ANALYSER_PATH
      type: string
      description: >-
        The path to use for dependency analysis.
      default: "."
  steps:
    - name: maven-settings
      image: "registry.access.redhat.com/ubi8/ubi:8.5"
      securityContext:
        runAsUser: 0
      resources:
        requests:
          memory: "128Mi"
          cpu: "10m"
        limits:
          memory: "512Mi"
          cpu: "300m"
      env:
        - name: GRADLE_USER_HOME
          value: $(workspaces.maven-settings.path)/.gradle
      script: |
        #!/usr/bin/env bash

        mkdir -p ${GRADLE_USER_HOME}
        cat > ${GRADLE_USER_HOME}/gradle.properties << EOF
        org.gradle.caching=false
        org.gradle.console=plain
        # This prevents the daemon from running (which is unnecessary in one-off builds) and increases the memory allocation
        org.gradle.daemon=false
        # For Spring/Nebula Release Plugins
        release.useLastTag=true

        # Increase timeouts
        systemProp.org.gradle.internal.http.connectionTimeout=600000
        systemProp.org.gradle.internal.http.socketTimeout=600000
        systemProp.http.socketTimeout=600000
        systemProp.http.connectionTimeout=600000

        # Proxy settings <https://docs.gradle.org/current/userguide/build_environment.html#sec:accessing_the_web_via_a_proxy>
        systemProp.http.proxyHost=$(params.PROXY_HOST)
        systemProp.http.proxyPort=$(params.PROXY_PORT)
        systemProp.http.proxyUser=$(params.PROXY_USER)
        systemProp.http.proxyPassword=$(params.PROXY_PASSWORD)
        systemProp.http.nonProxyHosts=$(params.PROXY_NON_PROXY_HOSTS)
        EOF
        cat > ${GRADLE_USER_HOME}/init.gradle << EOF
        allprojects {
            buildscript {
                repositories {
                    mavenLocal()
                    maven {
                        name "HACBS Maven Repository"
                        url "$(params.MAVEN_MIRROR_URL)/v1/cache/default/0/"
                        credentials {
                            username "$(params.SERVER_USER)"
                            password "$(params.SERVER_PASSWORD)"
                        }
                        //allowInsecureProtocol = true
                    }
                    maven {
                        name "Gradle Central Plugin Repository"
                        url "https://plugins.gradle.org/m2/"
                    }
                }
            }
            repositories {
                mavenLocal()
                maven {
                    name "HACBS Maven Repository"
                    url "$(params.MAVEN_MIRROR_URL)/v1/cache/default/0/"
                    credentials {
                        username "$(params.SERVER_USER)"
                        password "$(params.SERVER_PASSWORD)"
                    }
                    //allowInsecureProtocol = true
                }
                maven {
                    name "Gradle Central Plugin Repository"
                    url "https://plugins.gradle.org/m2/"
                }
            }
        }

        settingsEvaluated { settings ->
            settings.pluginManagement {
                repositories {
                    mavenLocal()
                    maven {
                        name "HACBS Maven Repository"
                        url "$(params.MAVEN_MIRROR_URL)/v1/cache/default/0/"
                        credentials {
                            username "$(params.SERVER_USER)"
                            password "$(params.SERVER_PASSWORD)"
                        }
                        //allowInsecureProtocol = true
                    }
                    maven {
                        name "Gradle Central Plugin Repository"
                        url "https://plugins.gradle.org/m2/"
                    }
                }
            }
        }
        EOF

        # fix-permissions-for-builder
        chown 1001:1001 -R $(workspaces.source.path)
    - name: gradle-tasks
      image: $(params.IMAGE)
      securityContext:
        runAsUser: 0
      env:
        - name: GRADLE_USER_HOME
          value: $(workspaces.maven-settings.path)/.gradle
      workingDir: $(workspaces.source.path)/$(params.CONTEXT_DIR)
      args: [ "$(params.GOALS[*])" ]
      script: |
        #!/usr/bin/env bash

        DEFAULT_TOOL_VERSION="$(params.TOOL_VERSION)"

        echo "Default Gradle version is ${DEFAULT_TOOL_VERSION}"

        TOOL_VERSION=$(sed -n "s/distributionUrl=.*\/gradle-\(.*\)-.*\.zip$/\1/p" gradle/wrapper/gradle-wrapper.properties 2>/dev/null)

        if [ -n "${TOOL_VERSION}" ]; then
            echo "Found Gradle version ${TOOL_VERSION} in gradle/wrapper/gradle-wrapper.properties"

            if [ -d "/opt/gradle-${TOOL_VERSION}" ]; then
                echo "Found Gradle home directory at /opt/gradle-${TOOL_VERSION}"
            else
                echo "Resetting Gradle version from ${TOOL_VERSION} to ${DEFAULT_TOOL_VERSION} since directory /opt/gradle-${TOOL_VERSION} does not exist"
                TOOL_VERSION="${DEFAULT_TOOL_VERSION}"
            fi
        else
            echo "Could not set Gradle version from gradle/wrapper/gradle-wrapper.properties" >&2
        fi

        export GRADLE_HOME="/opt/gradle-${TOOL_VERSION}"
        echo "GRADLE_HOME=${GRADLE_HOME}"

        if [ -d "${GRADLE_HOME}" ]; then
            case "${TOOL_VERSION}" in
                7.[3456789]*)
                    SUPPORTED_JAVA_VERSION="17"
                    sed -i -e 's|//allowInsecureProtocol|allowInsecureProtocol|g' ${GRADLE_USER_HOME}/init.gradle
                    ;;
                7.*)
                    SUPPORTED_JAVA_VERSION="11"
                    sed -i -e 's|//allowInsecureProtocol|allowInsecureProtocol|g' ${GRADLE_USER_HOME}/init.gradle
                    ;;
                6.*)
                    SUPPORTED_JAVA_VERSION="11"
                    ;;
                5.*)
                    SUPPORTED_JAVA_VERSION="11"
                    ;;
                4.*)
                    SUPPORTED_JAVA_VERSION="1.8.0"
                    ;;
                *)
                    echo "Unsupported Gradle version: ${TOOL_VERSION}" >&2
                    exit 1
                    ;;
            esac
        else
            echo "Gradle home directory not found at ${GRADLE_HOME}" >&2
            exit 1
        fi

        # XXX: Workaround for com.github.sherter.google-java-format not working on Java 17
        if find -type f -name 'build.gradle*' -print0 | xargs -0 grep -q com.github.sherter.google-java-format; then
            echo "Found com.github.sherter.google-java-format plugin. Forcing Java version to 11" >&2
            SUPPORTED_JAVA_VERSION="11"
        fi

        JAVA_VERSION="$(params.JAVA_VERSION)"

        [ -n "${JAVA_VERSION}" ] || JAVA_VERSION="${SUPPORTED_JAVA_VERSION}"

        export JAVA_HOME="/usr/lib/jvm/java-${JAVA_VERSION}-openjdk"
        export PATH="${JAVA_HOME}/bin:${PATH}"
        export PATH="${GRADLE_HOME}/bin:${PATH}"
        export LANG="en_US.UTF-8"
        export LC_ALL="en_US.UTF-8"

        if [ -n "$(params.ENFORCE_VERSION)" ]; then
            gradle-manipulator --no-colour --info --stacktrace -l "${GRADLE_HOME}" $(params.GRADLE_MANIPULATOR_ARGS) -DversionOverride=$(params.ENFORCE_VERSION) generateAlignmentMetadata || exit 1
        else
            gradle-manipulator --no-colour --info --stacktrace -l "${GRADLE_HOME}" $(params.GRADLE_MANIPULATOR_ARGS) generateAlignmentMetadata || exit 1
        fi

        gradle -DAProxDeployUrl=file:$(workspaces.source.path)/hacbs-jvm-deployment-repo $@ || exit 1

        # fix-permissions-for-builder
        chown 1001:1001 -R $(workspaces.source.path)
    - name: analyse-dependencies
      securityContext:
        runAsUser: 0

      image: quay.io/replaced-image:bogus
      args:
        - path
        - $(workspaces.source.path)/$(params.CONTEXT_DIR)/$(params.DEPENDENCY_ANALYSER_PATH)
        - -s
        - $(workspaces.source.path)/$(params.CONTEXT_DIR)/$(params.DEPENDENCY_ANALYSER_PATH)/java-sbom.json
        - -c
        - "$(results.dependencies.path)"
        - -u
        - "$(results.untrusted-dependencies.path)"
        - --cache-url
        - $(params.MAVEN_MIRROR_URL)/v1/rebuild
