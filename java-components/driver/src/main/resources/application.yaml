quarkus:
  shutdown:
    timeout: 300
#  log:
#    category:
#      "org.jboss.pnc":
#        level: DEBUG
#    console:
#      format: "%d{HH:mm:ss,SSS} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{3.}] (%t) %s%e mdc:[%X]%n"
#    handler:
#      kafka:
#        enabled: false
#        broker-list: kafka.example.com:443
#        topic: kafka-topic
#        security-protocol: SSL
#        ssl-truststore-location: /mnt/kafka-client-truststore.jks
#        ssl-truststore-password: none
#        filter-logger-name-pattern: org.jboss.pnc.*
#        level: INFO
#        async: true
#        async-queue-length: 1024
#        async-overflow-action: BLOCK
#  http:
#    cors:
#      ~: true
#      origins: "/.*/"
#  kubernetes-client:
#    connection-timeout: PT30S
#    request-timeout: PT30S
    #namespace: default
    #token: secretToken
  oidc:
    auth-server-url: https://keycloak-host/auth/realms/pncredhat
    client-id: client
    credentials:
      secret: secret
  #     tls:
  #       verification: none
#      keycloak:
#        policy-enforcer:
#          enable: false
  oidc-client:
    auth-server-url: https://keycloak-host/auth/realms/pncredhat
    client-id: service-account
    credentials:
      secret: secret-of-service-account
  rest-client:
    indy-service:
      url: "http://localhost:8080"
#  opentelemetry:
#    enabled: true
#    tracer:
#      enabled: true
#      # reflect sampling on collector
#      resource-attributes: "sampler_ratio=0.05,service.name=environment-driver"
#      sampler:
#        ratio: 0.05
#      exporter:
#        otlp:
#          # Send telemetry data to an opentelemetry-collector
#          #endpoint: http://localhost:4317
#environment-driver:
#  build-agent:
#    service-scheme: http
#    container-port: 8080
#    host: localhost
#    ping-path: /
#    running-wait-for: 30
#    running-retry-delay-msec: 500
#    running-retry-max-delay-msec: 2000
#  http-client:
#    connect-timeout: 5
#    request-timeout: 15
#  builder-pod-memory: 4
#  firewall-allowed-destinations: 127.0.0.1
#  allowed-http-outgoing-destinations:
#  proxy-server:
#  proxy-port:
#  non-proxy-hosts: localhost
#  working-directory: /tmp
#  self-base-url: http://localhost:8081/
#  pod-running-wait-for: 600
#  service-running-wait-for: 60
#  ssh-ping-retry-duration: 15
#  callback-retry-duration: 300
#  destroy-retry-duration: 3600
#  ssh-ping-retry-delay-msec: 500
#  ssh-ping-retry-max-delay-msec: 2000
#  destroy-retry-delay-msec: 1000
#  destroy-retry-max-delay-msec: 10000
#  pod-running-retry-delay-msec: 1000
#  pod-running-retry-max-delay-msec: 5000
#  service-running-retry-delay-msec: 500
#  service-running-retry-max-delay-msec: 5000
#  callback-retry-delay-msec: 500
#  callback-retry-max-delay-msec: 5000
#  openshift:
#    ssh-service-port-name: 2222-ssh
#    pod: |
#      kind: Pod
#      apiVersion: v1
#      metadata:
#        name: "%{pod-name}"
#        labels:
#          pnc-build-agent-pod: "%{pod-name}"
#          environment: "%{environment-label}"
#      spec:
#        nodeSelector:
#          acceptpncbuildagent: 'true'
#        containers:
#          - name: pnc-build-agent-container
#            image: "%{image}"
#            ports:
#              - name: http
#                containerPort: %{containerPort}
#                protocol: TCP
#            env:
#              - name: firewallAllowedDestinations
#                value: "%{firewallAllowedDestinations}"
#              - name: allowedHttpOutgoingDestinations
#                value: "%{allowedHttpOutgoingDestinations}"
#              - name: isHttpActive
#                value: "%{isHttpActive}"
#              - name: proxyServer
#                value: "%{proxyServer}"
#              - name: proxyPort
#                value: "%{proxyPort}"
#              - name: nonProxyHosts
#                value: "%{nonProxyHosts}"
#              - name: AProxDependencyUrl
#                value: "%{AProxDependencyUrl}"
#              - name: AProxDeployUrl
#                value: "%{AProxDeployUrl}"
#              - name: buildAgentContextPath
#                value: "%{buildAgentContextPath}"
#              - name: buildAgentBindPort
#                value: "%{containerPort}"
#              - name: workerUserPassword
#                value: "%{workerUserPassword}"
#              - name: accessToken
#                value: "%{accessToken}"
#              - name: logUserId
#                value: "%{userId}"
#              - name: logProcessContext
#                value: "%{processContext}"
#              - name: buildContentId
#                value: "%{buildContentId}"
#              - name: buildAgentArguments
#                value: "-b 0.0.0.0 -p %{containerPort} -pl FILE -l /tmp -c %{buildAgentContextPath}"
#              - name: buildAgentJvmProperties
#                value: "-DlogMDC=processContext:%{processContext};tmp:%{tmp};exp:%{exp}"
#            resources:
#              requests:
#                cpu: 2000m
#                memory: "%{resourcesMemory}"
#              limits:
#                cpu: 2000m
#                memory: "%{resourcesMemory}"
#            terminationMessagePath: "/dev/termination-log"
#            imagePullPolicy: Always
#            securityContext:
#              capabilities:
#                add:
#                  - NET_ADMIN
#
#        restartPolicy: Never
#        activeDeadlineSeconds: 86400
#        dnsPolicy: ClusterFirst
#    service: |
#      kind: Service
#      apiVersion: v1
#      metadata:
#        name: "%{service-name}"
#        labels:
#          environment: "%{environment-label}"
#      spec:
#        ports:
#          - name: 8080-tcp
#            protocol: TCP
#            port: 80
#            targetPort: %{containerPort}
#            nodePort: 0
#        selector:
#          pnc-build-agent-pod: "%{pod-name}"
#      status:
#        loadBalancer:
#    ssh-service: |
#      kind: Service
#      apiVersion: v1
#      metadata:
#        name: "%{ssh-service-name}"
#      spec:
#        ports:
#          - name: 2222-ssh
#            protocol: TCP
#            port: 2222
#            targetPort: 2222
#            nodePort: 0
#        selector:
#          pnc-build-agent-pod: "%{pod-name}"
#        type: NodePort
#      status:
#        loadBalancer:
#    route: |
#      kind: Route
#      apiVersion: v1
#      metadata:
#        name: "%{route-name}"
#      spec:
#        host: "%{build-agent-host}"
#        path: "%{route-path}"
#        to:
#          kind: Service
#          name: "%{service-name}"
#
#"%test":
#  quarkus:
#    oidc:
#      enabled: false
#    oidc-client:
#      enabled: false
#    log:
#      console:
#        json: false
#  environment-driver:
#    http-client:
#      connect-timeout: 1
#      request-timeout: 3
#    build-agent:
#      ping-path: PingHandler
#      host: localhost
#      running-wait-for: 3
#    openshift:
#      pod: |
#        kind: Pod
#        apiVersion: v1
#        metadata:
#          name: "%{pod-name}"
#          labels:
#            pnc-build-agent-pod: "%{pod-name}"
#            environment: "%{environment-label}"
#        status:
#          phase: Running
#        spec:
#          nodeSelector:
#            acceptpncbuildagent: 'true'
#          containers:
#            - name: pnc-build-agent-container
#              image: "%{image}"
#              ports:
#                - name: http
#                  containerPort: %{containerPort}
#                  protocol: TCP
#              env:
#                - name: firewallAllowedDestinations
#                  value: "%{firewallAllowedDestinations}"
#                - name: allowedHttpOutgoingDestinations
#                  value: "%{allowedHttpOutgoingDestinations}"
#                - name: isHttpActive
#                  value: "%{isHttpActive}"
#                - name: proxyServer
#                  value: "%{proxyServer}"
#                - name: proxyPort
#                  value: "%{proxyPort}"
#                - name: nonProxyHosts
#                  value: "%{nonProxyHosts}"
#                - name: AProxDependencyUrl
#                  value: "%{AProxDependencyUrl}"
#                - name: AProxDeployUrl
#                  value: "%{AProxDeployUrl}"
#                - name: buildAgentContextPath
#                  value: "%{buildAgentContextPath}"
#                - name: buildAgentBindPort
#                  value: "%{containerPort}"
#                - name: workerUserPassword
#                  value: "%{workerUserPassword}"
#                - name: accessToken
#                  value: "%{accessToken}"
#                - name: logUserId
#                  value: "%{userId}"
#                - name: logProcessContext
#                  value: "%{processContext}"
#                - name: buildContentId
#                  value: "%{buildContentId}"
#                - name: buildAgentArguments
#                  value: "-b 0.0.0.0 -p %{containerPort} -pl FILE -l /tmp -c %{buildAgentContextPath}"
#                - name: buildAgentJvmProperties
#                  value: "-DlogMDC=processContext:%{processContext};tmp:%{tmp};exp:%{exp};traceId:%{traceId};spanId:%{spanId}"
#              resources:
#              terminationMessagePath: "/dev/termination-log"
#              imagePullPolicy: Always
#              securityContext:
#                capabilities:
#                  add:
#                    - NET_ADMIN
#          restartPolicy: Never
#          activeDeadlineSeconds: 28800
#          dnsPolicy: ClusterFirst
#      service: |
#        kind: Service
#        apiVersion: v1
#        metadata:
#          name: "%{service-name}"
#          labels:
#            environment: "%{environment-label}"
#        spec:
#          ports:
#            - name: 8080-tcp
#              protocol: TCP
#              port: 8082
#              targetPort: %{containerPort}
#              nodePort: 0
#          clusterIP: 127.0.0.1
#  bifrost-uploader:
#    api-url: "http://localhost:9999"
#
#"%dev":
#  quarkus:
#    log:
#      console:
#        json: false
